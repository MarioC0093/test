[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hojas de ejercicios curso 2024-2025",
    "section": "",
    "text": "setwd(\"C:/Users/MarioC/Documents/Master_Bioestadistica/Supervivencia/00_Ejercicios\")"
  },
  {
    "objectID": "ejercicio_00.html",
    "href": "ejercicio_00.html",
    "title": "Ejercicio 0",
    "section": "",
    "text": "library(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\n\n\nEn el fichero Datos—Tema 1—ejercicio0, aparecen las fechas de nacimiento de 80 individuos. Calcular su edad con R.\n\nLectura de datos.\n\nejercicio0 &lt;- haven::read_sav(\"~/Master_Bioestadistica/Supervivencia/Tema_01/Datos Ejemplos/ejercicio0.sav\")\n\n\nstr(ejercicio0)\n## tibble [80 × 2] (S3: tbl_df/tbl/data.frame)\n##  $ num_pac : num [1:80] 1 2 3 4 5 6 7 8 9 10 ...\n##   ..- attr(*, \"format.spss\")= chr \"F8.0\"\n##  $ fecha_na: Date[1:80], format: \"1973-05-28\" \"1971-01-21\" ...\n\nCálculo de la variable edad en diferentes formatos.\n\noptions(tibble.width = Inf)\n\nejercicio0 &lt;- ejercicio0 %&gt;%\n  mutate(\n    edad_anyos = floor(time_length(difftime(today(), fecha_na), \"years\")),\n    edad_anyos_50 = floor(time_length(difftime(today(), fecha_na %m+% years(50)), \"years\")),\n    edad_anyos_dec = round(time_length(difftime(today(), fecha_na), \"years\"), 2),\n    edad_anyos_dec_50 = round(time_length(difftime(today(), fecha_na %m+% years(50)), \"years\"), 2),\n    edad_anyos_meses = paste(\n      floor(time_length(difftime(today(), fecha_na), \"years\")), \"años y\",\n      floor(time_length(difftime(today(), fecha_na), \"months\")) %% 12, \"meses\"\n    ),\n    edad_anyos_dias = paste(\n      floor(time_length(difftime(today(), fecha_na), \"years\")), \"años y\",\n      floor(time_length(difftime(today(), fecha_na), \"days\")) %% 365, \"días\"\n    ),\n    edad_dias = as.numeric(difftime(today(), fecha_na, units = \"days\")),\n    edad_dias_50 = as.numeric(difftime(today(), fecha_na %m+% years(50), units = \"days\"))\n  )\n\nhead(ejercicio0)\n\n# A tibble: 6 × 10\n  num_pac fecha_na   edad_anyos edad_anyos_50 edad_anyos_dec edad_anyos_dec_50\n    &lt;dbl&gt; &lt;date&gt;          &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;             &lt;dbl&gt;\n1       1 1973-05-28         51             1           51.7              1.71\n2       2 1971-01-21         54             4           54.1              4.06\n3       3 1970-08-02         54             4           54.5              4.53\n4       4 1972-03-30         52             2           52.9              2.87\n5       5 1967-03-01         57             7           58.0              7.95\n6       6 1969-06-11         55             5           55.7              5.68\n  edad_anyos_meses   edad_anyos_dias    edad_dias edad_dias_50\n  &lt;chr&gt;              &lt;chr&gt;                  &lt;dbl&gt;        &lt;dbl&gt;\n1 51 años y 8 meses  51 años y 273 días     18888          626\n2 54 años y 0 meses  54 años y 36 días      19746         1483\n3 54 años y 6 meses  54 años y 208 días     19918         1655\n4 52 años y 10 meses 52 años y 332 días     19312         1050\n5 57 años y 11 meses 57 años y 363 días     21168         2905\n6 55 años y 8 meses  55 años y 260 días     20335         2073\n\n\n\ntest_normalidad &lt;- function(data, variable) {\n  # Comprobar que la variable exista en el dataframe\n  if (!variable %in% colnames(data)) {\n    stop(\"La variable no existe en el dataframe.\")\n  }\n  \n  # Obtener el tamaño de la muestra\n  n_muestra &lt;- nrow(data)\n  \n  # Aplicar el test de normalidad\n  if (n_muestra &lt;= 50) {\n    test_res &lt;- shapiro.test(data[[variable]])\n    test_name &lt;- \"Shapiro-Wilk\"\n  } else {\n    test_res &lt;- nortest::lillie.test(data[[variable]])\n    test_name &lt;- \"Kolmogorov-Smirnov (Lilliefors)\"\n  }\n  \n  # Devolver el resultado y el nombre del test\n  return(list(test_name = test_name, \n              p_value = round(test_res$p.value, 4), \n              result = test_res))\n}\n\nDistribucón de la edad en años:\n\nnorm_result &lt;- test_normalidad(ejercicio0, \"edad_anyos\")\n\nggplot(ejercicio0, aes(x = edad_anyos)) +\n  geom_histogram(bins = 10, fill = \"lightblue3\", color = \"black\") +\n  labs(title=\"Distribucón variable edad en años\",\n       x = \"Edad\", y = \"Frecuencia\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_rect(color = \"black\", fill = NA, linewidth = 1),\n        axis.line = element_blank()) +\n  annotate(\"text\", \n           x = max(range(ejercicio0$edad_anyos)) * 0.9,\n           y = max(table(ejercicio0$edad_anyos)) * 0.9, \n           label = paste(\"H0: Distribución Normal\\n\", norm_result$test_name, \"\\n p =\", norm_result$p_value), \n           size = 3, color = \"black\", hjust = 0.5)\n\n\n\n\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  51.00   57.00   60.00   60.19   63.00   80.00 \n\n\nDistribucón de la edad en días:\n\nnorm_result &lt;- test_normalidad(ejercicio0, \"edad_dias\")\n\nggplot(ejercicio0, aes(x = edad_dias)) +\n  geom_histogram(bins = 10, fill = \"lightblue3\", color = \"black\") +\n  labs(title=\"Distribucón variable edad en días\",\n       x = \"Edad\", y = \"Frecuencia\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_rect(color = \"black\", fill = NA, linewidth = 1),\n        axis.line = element_blank()) +\n  annotate(\"text\", \n           x = max(range(ejercicio0$edad_dias)) * 0.94,\n           y = 15, \n           label = paste(\"H0: Distribución Normal\\n\", norm_result$test_name, \"\\n p =\", norm_result$p_value), \n           size = 3, color = \"black\", hjust = 0.5)\n\n\n\n\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18758   21163   22236   22174   23180   29248"
  },
  {
    "objectID": "ejercicio_01.html",
    "href": "ejercicio_01.html",
    "title": "Ejercicio 1",
    "section": "",
    "text": "library(dplyr)\nlibrary(ggplot2)\n\n\nUn inmunólogo dispone de los siguientes datos de un conjunto de pacientes con SIDA.\nRealizar una estimación de la función de supervivencia sin utilizar ninguna de las covariables. Obtener el valor de la mediana, de la supervivencia a los 20 meses, la curva de Kaplan Meier y la mediana del tiempo de seguimiento.\n\nLectura de datos.\n\nejercicio1 &lt;- haven::read_sav(\"~/Master_Bioestadistica/Supervivencia/Tema_01/Datos Ejercicio 1/ejercicio1.sav\")\nejercicio1 |&gt; dim(); summary(ejercicio1)\n## [1] 46  7\n##     tiempos          estado          psicolog           sexo        estadio    \n##  Min.   :12.00   Min.   :0.0000   Min.   :0.0000   Min.   :0.0   Min.   :1.00  \n##  1st Qu.:27.25   1st Qu.:1.0000   1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:1.00  \n##  Median :45.50   Median :1.0000   Median :0.0000   Median :0.5   Median :2.00  \n##  Mean   :55.11   Mean   :0.7826   Mean   :0.4565   Mean   :0.5   Mean   :1.87  \n##  3rd Qu.:78.00   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0   3rd Qu.:2.00  \n##  Max.   :99.00   Max.   :1.0000   Max.   :1.0000   Max.   :1.0   Max.   :3.00  \n##     tratamie          edad      \n##  Min.   :1.000   Min.   :23.00  \n##  1st Qu.:2.000   1st Qu.:34.00  \n##  Median :2.000   Median :44.50  \n##  Mean   :2.217   Mean   :42.41  \n##  3rd Qu.:3.000   3rd Qu.:46.00  \n##  Max.   :3.000   Max.   :67.00\n\n\nhead(ejercicio1)\n## # A tibble: 6 × 7\n##   tiempos estado psicolog  sexo       estadio       tratamie           edad\n##     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt;  &lt;dbl+lbl&gt;     &lt;dbl+lbl&gt;         &lt;dbl&gt;\n## 1      14      1 1 [Si]    1 [Hombre] 3 [Estadío 3] 1 [Tratamiento a]    46\n## 2      13      1 0 [No]    0 [Mujer]  3 [Estadío 3] 1 [Tratamiento a]    46\n## 3      12      1 0 [No]    1 [Hombre] 3 [Estadío 3] 1 [Tratamiento a]    45\n## 4      23      0 0 [No]    0 [Mujer]  3 [Estadío 3] 1 [Tratamiento a]    34\n## 5      23      0 0 [No]    0 [Mujer]  3 [Estadío 3] 1 [Tratamiento a]    34\n## 6      24      1 0 [No]    1 [Hombre] 3 [Estadío 3] 2 [Tratamiento b]    23\n\n\ntiempos: tiempo de supervivencia\n\nestado: 0 - aguanta / 1 - censura\n\n\nejercicio1$tiempos |&gt; hist()\n\n\n\n\nTransformación log de la función de supervivencia \\(\\hat{S}(t)\\)\nEstimo la función con KM y hago transformación para garantizar que el IC está dentro del intervalo [0,1].\n\nKM_1 &lt;- survival::survfit(Surv(tiempos, estado)~1, data=ejercicio1, conf.type='log')\nKM_1\n## Call: survfit(formula = Surv(tiempos, estado) ~ 1, data = ejercicio1, \n##     conf.type = \"log\")\n## \n##       n events median 0.95LCL 0.95UCL\n## [1,] 46     36     56      45      89\nsummary(KM_1)\n## Call: survfit(formula = Surv(tiempos, estado) ~ 1, data = ejercicio1, \n##     conf.type = \"log\")\n## \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##    12     46       1   0.9783  0.0215        0.937        1.000\n##    13     45       1   0.9565  0.0301        0.899        1.000\n##    14     44       1   0.9348  0.0364        0.866        1.000\n##    24     39       3   0.8629  0.0522        0.766        0.971\n##    25     36       2   0.8149  0.0593        0.707        0.940\n##    34     34       2   0.7670  0.0647        0.650        0.905\n##    35     32       2   0.7191  0.0690        0.596        0.868\n##    45     30       6   0.5753  0.0762        0.444        0.746\n##    46     23       2   0.5252  0.0773        0.394        0.701\n##    56     21       2   0.4752  0.0776        0.345        0.655\n##    67     19       3   0.4002  0.0765        0.275        0.582\n##    78     15       3   0.3201  0.0739        0.204        0.503\n##    89     11       3   0.2328  0.0688        0.130        0.415\n##    97      7       2   0.1663  0.0632        0.079        0.350\n##    99      5       3   0.0665  0.0443        0.018        0.246\n\n\nCódigosurvminer::ggsurvplot(\n  KM_1,\n  conf.int = TRUE,                      # Intervalos de confianza\n  conf.int.style = \"ribbon\",            # Sombreado para el IC\n  break.time.by = 5,                    # Ejes en intervalos de 5\n  risk.table = TRUE,                     # Tabla de riesgo debajo\n  risk.table.height = 0.25,              # Tamaño de la tabla de riesgo\n  risk.table.col = \"black\",              # Color del texto de la tabla de riesgo\n  pval = TRUE,                           # Mostrar p-valor\n  surv.median.line = \"hv\",               # Línea en la mediana de supervivencia\n  legend.title = \"T. log\",   # Título de la leyenda\n  legend.labs = c(\"Supervivencia Global\"), # Etiqueta de la leyenda\n  palette = c(\"#E63946\"),                # Color principal de la curva\n  xlab = \"Tiempo (días)\",                # Etiqueta del eje X\n  ylab = \"Probabilidad de Supervivencia\",# Etiqueta del eje Y\n  title = \"Curva de Supervivencia Kaplan-Meier\", # Título principal\n  ggtheme = theme_minimal() +             # Estilo de la gráfica\n    theme(\n      plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n      axis.title = element_text(size = 14, face = \"bold\"),\n      axis.text = element_text(size = 12),\n      legend.position = \"bottom\",\n      legend.text = element_text(size = 12)\n    )\n)\n\n\n\n\nValor de la mediana.\nSurv(tiempos, estado == 0)\n- Surv() crea un objeto de supervivencia.\n- tiempos: Variable que indica el tiempo hasta el evento o censura.\n- estado == 0: Define que el evento de interés ocurre cuando estado == 0 (es decir, considera 0 como el evento, en lugar del típico 1).\n~ 1\n- Se ajusta un modelo sin covariables, lo que significa que se estima una única curva de supervivencia para toda la población\nconf.type = “log”\n- Define que los intervalos de confianza se calculen en la escala logarítmica (log-log), lo cual mejora la precisión en situaciones con eventos raros o en la cola de la distribución.\nMes en el cual el 50 % de los individuos de la cohorte han experimentado el evento de interés. Indica el punto en el cual la probabilidad de que un individuo sobreviva es del 50 %.\n\nfollow_up_1 &lt;- survival::survfit(Surv(tiempos, estado==1)~1, data=ejercicio1, conf.type=\"log\")\nfollow_up_1\n\nCall: survfit(formula = Surv(tiempos, estado == 1) ~ 1, data = ejercicio1, \n    conf.type = \"log\")\n\n      n events median 0.95LCL 0.95UCL\n[1,] 46     36     56      45      89\n\n\nSupervivencia a los 20 meses.\n\nt_objetivo &lt;- 20\nidx &lt;- which(KM_1$time == t_objetivo)\n\n\nidx_before &lt;- max(which(KM_1$time &lt;= t_objetivo))\nidx_after &lt;- min(which(KM_1$time &gt;= t_objetivo))\n\nt_before &lt;- KM_1$time[idx_before]\nt_after &lt;- KM_1$time[idx_after]\nS_t_before &lt;- KM_1$surv[idx_before]\nS_t_after &lt;- KM_1$surv[idx_after]\n\n# Interpolación lineal\nif (t_before == t_after) {\n  S_t &lt;- S_t_before\n} else {\n  S_t &lt;- S_t_before + (S_t_after - S_t_before) * (t_objetivo - t_before) / (t_after - t_before)\n}\n\nS_t\n\n[1] 0.9347826\n\n\n\nsummary(KM_1, times = 20, extend = TRUE) \n\nCall: survfit(formula = Surv(tiempos, estado) ~ 1, data = ejercicio1, \n    conf.type = \"log\")\n\n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n   20     43       3    0.935  0.0364        0.866            1\n\n\n\nS_t &lt;- 0.935\nse_Greenwood &lt;- 0.0364\n\nset.seed(12345)\nsimu_normal &lt;- rnorm(1000, mean = S_t, sd = se_Greenwood)\n\nhist(simu_normal, breaks=30, probability = TRUE, col = \"blue\", \n     main = paste(\"Aproximación Normal para S(\", t_objetivo, \")\", sep = \"\"),\n     xlab = \"S(t)\", ylab = \"Densidad\")\n\ncurve(dnorm(x, mean = S_t, sd = se_Greenwood), col = \"red\", lwd = 2, add = TRUE)\nabline(v = S_t, col = \"black\", lty = 2)  # estimación de S(t)\n\n\n\ncat(\"S(8):\", S_t, \"\\nError estándar de Greenwood:\", se_Greenwood, \"\\n\")\n\nS(8): 0.935 \nError estándar de Greenwood: 0.0364 \n\n\nMediana del tiempo de seguimiento.\nIndependiente al evento de interés, relacionado con la duración del seguimiento de los pacientes. Tiempo medio en el que los individuos fueron seguidos antes de que terminara el estudio o se censuraran.\n\nmedian(ejercicio1$tiempos)\n\n[1] 45.5\n\n\n\nfollow_up &lt;- survival::survfit(Surv(tiempos, estado==0)~1, data=ejercicio1, conf.type=\"log\")\nfollow_up\n\nCall: survfit(formula = Surv(tiempos, estado == 0) ~ 1, data = ejercicio1, \n    conf.type = \"log\")\n\n      n events median 0.95LCL 0.95UCL\n[1,] 46     10     99      99      NA\n\n\nSolventamos el problema de las colas (no sé qué problema es. ah, el del extremo del intervalo) para el tiempo mediano de seguimiento: cambiando el 1 por el 0 si tenemos muchos empates. entonces la estimacion de la mediana del tiempo de seguimiento mejora.\n\nlibrary(prodlim)\nquantile(prodlim(Hist(tiempos, estado)~1,data=ejercicio1,reverse=TRUE))\n\nQuantiles of the potential follow up time distribution based on the Kaplan-Meier method \napplied to the censored times reversing the roles of event status and censored.\n\nTable of quantiles and corresponding confidence limits:\n       q quantile lower upper\n   &lt;num&gt;    &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  0.00       NA    NA    NA\n2:  0.25       NA    NA    NA\n3:  0.50       NA    89    NA\n4:  0.75       78    67    NA\n5:  1.00       23    23    23\n\n\nMedian with interquartile range (IQR):\n    Median (IQR)\n          &lt;char&gt;\n1: NA (78.00;NA)\n\n\nes bastante posible que no se alcance la mediana porque el 50 % de los individuos no llegan a alcanzar el evento. el 75 % de los individuos se les sigue 78 meses y ya, se les pierde el seguimiento. en muchas ocasiones no puedo aportar la mediana si el pronóstico es bueno.\nen este caso se podría criticar el experimento diciendo que el tiempo de seguimiento es muy corto."
  },
  {
    "objectID": "ejercicio_02.html",
    "href": "ejercicio_02.html",
    "title": "Ejercicio 1",
    "section": "",
    "text": "library(dplyr)\nlibrary(ggplot2)\nlibrary(survival)\nlibrary(prodlim)\n\n\nUn investigador dispone de los siguientes datos de un conjunto de pacientes con enfermedad pulmonar que necesitan un trasplante de pulmón. La variable principal es el tiempo (time), en días, hasta que el paciente recibe el trasplante de pulmón; además se dispone de la siguiente información.\nstatus: 0 censurado, 1 trasplante.\nage: edad del paciente\ngender: 1 mujer, 2 hombre.\nbmi: IMC numérico.\ndisease: estadio de la enfermedad (1,2,3).\npast: antecedentes familiares de enfermedad pulmonar (0 no, 1 sí)\n\nRealizar una estimación de la función de supervivencia sin utilizar ninguna de las covariables. Obtener el valor de la mediana de seguimiento y la supervivencia a los 147 días.\nComparar la supervivencia en función de cada covariable categórica.\n\n\nTiempo hasta el evento AKA trasplante: ¿tiempo supervivencia global (overall survival) o tiempo hasta enfermedad progresiva (time to progressive disease)? Yo creo que la segunda.\nLectura de datos.\n\nejercicio2 &lt;- haven::read_dta(\"~/Master_Bioestadistica/Supervivencia/Tema_02/Datos Ejercicio 2/lung_transplant.dta\")\nejercicio2 |&gt; dim(); summary(ejercicio2)\n## [1] 196   8\n##     patient            time            status            age       \n##  Min.   :  1.00   Min.   :   3.0   Min.   :0.0000   Min.   :18.00  \n##  1st Qu.: 49.75   1st Qu.: 182.2   1st Qu.:0.0000   1st Qu.:41.75  \n##  Median : 98.50   Median : 843.5   Median :1.0000   Median :53.00  \n##  Mean   : 98.50   Mean   :1182.2   Mean   :0.6276   Mean   :48.56  \n##  3rd Qu.:147.25   3rd Qu.:2387.5   3rd Qu.:1.0000   3rd Qu.:58.00  \n##  Max.   :196.00   Max.   :2939.0   Max.   :1.0000   Max.   :67.00  \n##      gender           bmi           disease           past       \n##  Min.   :1.000   Min.   :14.00   Min.   :1.000   Min.   :0.0000  \n##  1st Qu.:1.000   1st Qu.:19.50   1st Qu.:1.000   1st Qu.:0.0000  \n##  Median :1.000   Median :22.60   Median :2.000   Median :0.0000  \n##  Mean   :1.429   Mean   :23.42   Mean   :2.168   Mean   :0.3418  \n##  3rd Qu.:2.000   3rd Qu.:27.52   3rd Qu.:3.000   3rd Qu.:1.0000  \n##  Max.   :2.000   Max.   :35.20   Max.   :4.000   Max.   :1.0000\n\nstatus: 0 censurado, 1 trasplante status: 37.24 % censurado, 62.76 % trasplante\n¿median(time) = 843.5? ¡No…!\n\nhead(ejercicio2)\n## # A tibble: 6 × 8\n##   patient  time status   age gender   bmi disease  past\n##     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n## 1       1  2324      1    59      1  29.6       1     0\n## 2       2   108      1    28      1  22.6       3     0\n## 3       3  2939      0    55      1  32.1       2     1\n## 4       4  1258      0    62      1  30         2     1\n## 5       5  2904      0    51      1  30.4       2     1\n## 6       6   444      1    59      1  26.9       2     1\n\n\nggplot(ejercicio2, aes(x = time)) + \n  geom_histogram(bins = 100) + \n  geom_vline(xintercept = seq(365, max(ejercicio2$time), by = 365), \n             linetype = \"dashed\", color = \"lightblue\") + \n  scale_x_continuous(breaks = seq(0, max(ejercicio2$time), by = 365),\n                     labels = paste0(\"Año \", seq(0, max(ejercicio2$time) / 365))) + \n  labs(title = \"Distribución time\", x = \"time (días)\", y = \"freq.\") + \n  theme_minimal() + \n  theme(panel.grid = element_blank(),\n        axis.text.x = element_text(color = \"blue\"))\n\n\n\n\n\nggplot(ejercicio2, aes(x = time / 30)) + \n  geom_histogram(bins = 40) + \n  geom_vline(xintercept = seq(12, max(ejercicio2$time / 30), by = 12), \n             linetype = \"dashed\", color = \"lightblue\") + \n  scale_x_continuous(breaks = seq(0, max(ejercicio2$time / 30), by = 12),\n                     labels = paste0(\"Año \", seq(0, max(ejercicio2$time / 30) / 12))) + \n  labs(title = \"Distribución time\", x = \"time (meses)\", y = \"freq.\") + \n  theme_minimal() + \n  theme(panel.grid = element_blank(),\n        axis.text.x = element_text(color = \"blue\"))\n\n\n\n\nSurv(time, status == 0)\n- Surv() crea un objeto de supervivencia.\n- time: variable que indica el tiempo hasta el evento o censura.\n- status == 0: define que el evento de interés ocurre cuando status == 1 (considera 1 el evento).\nLa mayoría de los censurados son para valores de tiempo más altos. Posiblemente estas censuras sean porque se cerró el estudio.\n\nwith(ejercicio2, Surv(time, status == 1)) |&gt; sort()\n\n  [1]    3     4    11+   16    21    22    25    29    31    31    38    38 \n [13]   55    61    63    65    70    73    76    80    85    88    92    95 \n [25]  104   108   114   121   121   123   124   128   132   134   136   142 \n [37]  148   151   153   158   158   158   159   162   165   169   174   175 \n [49]  177   184   192   192   199   203   209   231   237   239   257   263+\n [61]  273   278   288   290   294   310   311   313   320   322+  326+  335 \n [73]  343   354   358+  371   410   425+  431   437   444   461   474+  535 \n [85]  549   563   571+  625   642   671+  683   689   697   711   711   744 \n [97]  749   797   890   934+  962   967   969  1015+ 1032  1049+ 1062+ 1104 \n[109] 1105+ 1125  1165+ 1173  1208  1258+ 1283+ 1290  1321  1353+ 1364+ 1400+\n[121] 1405  1419  1474  1477  1493+ 1553  1581+ 1624  1686  1836  1901  1987 \n[133] 1991  2037+ 2071  2131+ 2162  2212  2230  2254+ 2303  2317  2324  2349 \n[145] 2364+ 2375  2378  2416+ 2421+ 2466+ 2471+ 2473+ 2479  2485+ 2487+ 2510+\n[157] 2523+ 2538+ 2538+ 2542+ 2545+ 2550  2555+ 2565+ 2571+ 2573+ 2575+ 2582+\n[169] 2586+ 2586+ 2591+ 2596+ 2596+ 2612+ 2616+ 2616+ 2618+ 2628+ 2631+ 2636+\n[181] 2638+ 2661+ 2664+ 2670+ 2671+ 2672+ 2699+ 2751+ 2775+ 2801+ 2817+ 2854+\n[193] 2856+ 2904+ 2929+ 2939+\n\n\n\nsurvfit(with(ejercicio2, Surv(time, status)) ~ 1)\n\nCall: survfit(formula = with(ejercicio2, Surv(time, status)) ~ 1)\n\n       n events median 0.95LCL 0.95UCL\n[1,] 196    123   1125     697    1901\n\n\n\nKM1_log &lt;- survfit(with(ejercicio2, Surv(time, status) ~ 1, conf.type='log')) # IC de transformación log (BY DEFAULT)\nKM1_log # Curva de supervivencia\n\nCall: survfit(formula = with(ejercicio2, Surv(time, status) ~ 1, conf.type = \"log\"))\n\n       n events median 0.95LCL 0.95UCL\n[1,] 196    123   1125     697    1901\n\n\n¡median(time) = 1125! (697, 1901)\nDía en el cual el 50 % de los individuos de la cohorte han tenido un trasplante. Indica el punto en el cual la probabilidad de que un individuo no tenga el trasplante es del 50 %.\n\nKM1_plain &lt;- survfit(with(ejercicio2, Surv(time, status) ~ 1, conf.type='plain')) # IC de la aprox normal\nKM1_plain # Curva de supervivencia\n\nCall: survfit(formula = with(ejercicio2, Surv(time, status) ~ 1, conf.type = \"plain\"))\n\n       n events median 0.95LCL 0.95UCL\n[1,] 196    123   1125     697    1901\n\n\n\nKM1_loglog &lt;- survfit(with(ejercicio2, Surv(time, status) ~ 1, conf.type='log-log')) # IC de transformación log-log\nKM1_loglog # Curva de supervivencia \n\nCall: survfit(formula = with(ejercicio2, Surv(time, status) ~ 1, conf.type = \"log-log\"))\n\n       n events median 0.95LCL 0.95UCL\n[1,] 196    123   1125     697    1901\n\n\n\nsurvminer::ggsurvplot(KM1_log,\n                      data = ejercicio2,\n                      title = \"Curva de supervivencia\",\n                      subtitle = '(by ggsurvplot)',\n                      conf.int = T,\n                      surv.median.line = \"hv\") # líneas H y V\n\n\n\n\nprodlim::Hist proporciona las extensiones adecuadas para tratar con datos censurados a la derecha y censurados por intervalos de riesgos competitivos y otros modelos multiestado.\n\nprodlim::Hist(ejercicio2$time, ejercicio2$status)\n\n\nRight-censored response of a survival model\n\nNo.Observations: 196 \n\nPattern:\n                Freq\n event          123 \n right.censored 73  \n\n\n\nquantile(prodlim(prodlim::Hist(time, status)~1, data=ejercicio2, reverse=FALSE))\n\nQuantiles of the event time distribution based on the Kaplan-Meier method.\n\nTable of quantiles and corresponding confidence limits:\n       q quantile lower upper\n   &lt;num&gt;    &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:  0.00       NA    NA    NA\n2:  0.25       NA  2550    NA\n3:  0.50     1125   697  1836\n4:  0.75      184   153   290\n5:  1.00        3     3    21\n\n\nMedian with interquartile range (IQR):\n          Median (IQR)\n                &lt;char&gt;\n1: 1125.00 (184.00;NA)\n\n\n¡median(time) = 1125! (697, 1836). Antes (697, 1901)\n\nCódigosurvminer::ggsurvplot(\n  KM1_log,\n  data = ejercicio2,\n  conf.int = TRUE,                      # Intervalos de confianza\n  conf.int.style = \"ribbon\",            # Sombreado para el IC\n  break.time.by = 365,                    # Ejes en intervalos de 5\n  risk.table = TRUE,                     # Tabla de riesgo debajo\n  risk.table.height = 0.25,              # Tamaño de la tabla de riesgo\n  risk.table.col = \"black\",              # Color del texto de la tabla de riesgo\n  pval = TRUE,                           # Mostrar p-valor\n  surv.median.line = \"hv\",               # Línea en la mediana de supervivencia\n  legend.title = \"T. log\",   # Título de la leyenda\n  legend.labs = c(\"Supervivencia Global\"), # Etiqueta de la leyenda\n  palette = c(\"#E63946\"),                # Color principal de la curva\n  xlab = \"Tiempo (días)\",                # Etiqueta del eje X\n  ylab = \"Probabilidad de Supervivencia\",# Etiqueta del eje Y\n  title = \"Curva de Supervivencia Kaplan-Meier\", # Título principal\n  ggtheme = theme_minimal() +             # Estilo de la gráfica\n    theme(\n      plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n      axis.title = element_text(size = 14, face = \"bold\"),\n      axis.text = element_text(size = 12),\n      legend.position = \"bottom\",\n      legend.text = element_text(size = 12)\n    )\n)\n\n\n\n\nSupervivencia a los 147 días: 0.821 (0.768, 0.876).\n\nsummary(KM1_log, time = 147, extend = TRUE) \n\nCall: survfit(formula = with(ejercicio2, Surv(time, status) ~ 1, conf.type = \"log\"))\n\n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n  147    160      35    0.821  0.0275        0.768        0.876\n\n\n\nKM2_log &lt;- survfit(with(ejercicio2, Surv(time, status) ~ disease , conf.type='log')) # IC de transformación log (BY DEFAULT)\nKM2_log # Curva de supervivencia\n\nCall: survfit(formula = with(ejercicio2, Surv(time, status) ~ disease, \n    conf.type = \"log\"))\n\n           n events median 0.95LCL 0.95UCL\ndisease=1 61     32   2324    1686      NA\ndisease=2 66     48    310     175     744\ndisease=3 44     28   1104     642      NA\ndisease=4 25     15   1419     689      NA\n\n\n\nCódigosurvminer::ggsurvplot(\n  KM2_log,\n  data = ejercicio2,\n  conf.int = FALSE,                      # Intervalos de confianza\n  conf.int.style = \"ribbon\",            # Sombreado para el IC\n  break.time.by = 365,                    # Ejes en intervalos de 5\n  risk.table = TRUE,                     # Tabla de riesgo debajo\n  risk.table.height = 0.25,              # Tamaño de la tabla de riesgo\n  risk.table.col = \"black\",              # Color del texto de la tabla de riesgo\n  pval = TRUE,                           # Mostrar p-valor\n  surv.median.line = \"hv\",               # Línea en la mediana de supervivencia\n  legend.title = \"T. log\",   # Título de la leyenda\n  legend.labs = c(\"disease=1\",\"disease=2\",\"disease=3\",\"disease=4\"), # Etiqueta de la leyenda\n  palette = c(\"#E63946\", \"#c2c1Ee\", \"#A8d8c8\", \"#451b9D\"),                # Color principal de la curva\n  xlab = \"Tiempo (días)\",                # Etiqueta del eje X\n  ylab = \"Probabilidad de Supervivencia\",# Etiqueta del eje Y\n  title = \"Curva de Supervivencia Kaplan-Meier\", # Título principal\n  ggtheme = theme_minimal() +             # Estilo de la gráfica\n    theme(\n      plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n      axis.title = element_text(size = 14, face = \"bold\"),\n      axis.text = element_text(size = 12),\n      legend.position = \"bottom\",\n      legend.text = element_text(size = 12)\n    )\n)"
  }
]